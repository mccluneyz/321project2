@model IEnumerable<RecycleRank.Models.Bin>
@{
    ViewData["Title"] = "Recycling Map";
}

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <style>
        #map {
            height: 600px;
            width: 100%;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .map-container {
            position: relative;
        }
        
        /* Custom recycle icon styles */
        .custom-recycle-icon {
            background: transparent !important;
            border: none !important;
        }
        
        /* Popup styling */
        .leaflet-popup-content {
            margin: 0 !important;
        }
        
        .leaflet-popup-content-wrapper {
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        
        /* Legend styling */
        .info.legend {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        /* Pulsing animation for new bins */
        @@keyframes pulse {
            0% {
                transform: scale(1);
                box-shadow: 0 2px 4px rgba(0,0,0,0.3);
            }
            50% {
                transform: scale(1.2);
                box-shadow: 0 4px 8px rgba(40, 167, 69, 0.6);
            }
            100% {
                transform: scale(1);
                box-shadow: 0 2px 4px rgba(0,0,0,0.3);
            }
        }
    </style>
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <!-- Navigation -->
            <div class="page-navigation mb-4">
                <a href="/Home/Index" class="btn btn-outline-primary">
                    <span>üè†</span> Home
                </a>
                <a href="/Recycling/Index" class="btn btn-outline-success">
                    <span>‚ôªÔ∏è</span> Log Activity
                </a>
                <a href="/Leaderboard/Index" class="btn btn-outline-warning">
                    <span>üèÜ</span> Leaderboard
                </a>
                <a href="/Recycling/Events" class="btn btn-outline-info">
                    <span>üìÖ</span> See Events
                </a>
                <a href="/Admin/Index" class="btn btn-outline-secondary">
                    <span>‚öôÔ∏è</span> Admin
                </a>
            </div>
            
            <h1 class="mb-4">üó∫Ô∏è Recycling Bin Map</h1>
            
            <!-- Success/Error Messages -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Find Recycling Bins Near You</h5>
                </div>
                <div class="card-body">
                    <div class="map-container mb-4">
                        <div id="map"></div>
                    </div>
                    
                    @if (Model != null && Model.Any())
                    {
                        <div class="row">
                            @foreach (var bin in Model)
                            {
                                <div class="col-md-4 mb-3">
                                    <div class="card h-100">
                                        <div class="card-body">
                                            <h6 class="card-title">@bin.Name</h6>
                                            <p class="card-text">
                                                <small class="text-muted">@bin.Address</small><br>
                                                <small>üìç @bin.Latitude, @bin.Longitude</small>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <strong>No bins found!</strong> Please add recycling bins through the Admin panel.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        // UA Campus GeoJSON Data
        const uaGeoJson = {
        "type": "FeatureCollection",
        "name": "UA Campus Key Landmarks and Boundary",
        "crs": {
            "type": "name",
            "properties": {
                "name": "urn:ogc:def:crs:OGC:1.3:CRS84"
            }
        },
        "features": [
            {
                "type": "Feature",
                "properties": {
                    "name": "The Quad (Campus Center)",
                    "type": "Landmark",
                    "description": "The historical and geographical heart of the campus, featuring Denny Chimes."
                },
                "geometry": {
                    "type": "Point",
                    "coordinates": [-87.5487, 33.2119]
                }
            },
            {
                "type": "Feature",
                "properties": {
                    "name": "Bryant-Denny Stadium",
                    "type": "Athletics",
                    "description": "Home of the Crimson Tide Football team."
                },
                "geometry": {
                    "type": "Point",
                    "coordinates": [-87.5501, 33.2084]
                }
            },
            {
                "type": "Feature",
                "properties": {
                    "name": "Gorgas Library",
                    "type": "Academic",
                    "description": "The main library on campus."
                },
                "geometry": {
                    "type": "Point",
                    "coordinates": [-87.5473, 33.2132]
                }
            },
            {
                "type": "Feature",
                "properties": {
                    "name": "Main Campus Area Boundary (Approximate)",
                    "type": "Boundary",
                    "description": "A very rough polygon outlining the central campus block."
                },
                "geometry": {
                    "type": "Polygon",
                    "coordinates": [
                        [
                            [-87.5540, 33.2160],
                            [-87.5400, 33.2160],
                            [-87.5400, 33.2070],
                            [-87.5540, 33.2070],
                            [-87.5540, 33.2160]
                        ]
                    ]
                }
            }
        ]
    };

    // Initialize Map centered on The Quad
    const map = L.map('map').setView([33.2119, -87.5487], 15);

    // Add Tile Layer (OpenStreetMap)
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Function to style GeoJSON features
    function style(feature) {
        if (feature.geometry.type === 'Polygon') {
            return {
                fillColor: '#28a745',
                weight: 2,
                opacity: 0.6,
                color: '#155724',
                fillOpacity: 0.1
            };
        }
        return {};
    }

    // Function to add popups on point markers
    function onEachFeature(feature, layer) {
        if (feature.properties && feature.properties.name) {
            let popupContent = `<div class="fw-bold text-success">${feature.properties.name}</div>`;
            if (feature.properties.description) {
                popupContent += `<p class="mb-0 small">${feature.properties.description}</p>`;
            }
            layer.bindPopup(popupContent);
        }
    }

    // Add UA Campus GeoJSON data to the map
    L.geoJSON(uaGeoJson, {
        style: style,
        pointToLayer: function (feature, latlng) {
            // Custom marker styling for campus landmarks
            return L.circleMarker(latlng, {
                radius: 8,
                fillColor: "#28a745",
                color: "#155724",
                weight: 2,
                opacity: 1,
                fillOpacity: 0.8
            });
        },
        onEachFeature: onEachFeature
    }).addTo(map);

    // Create custom recycle icon
    const recycleIcon = L.divIcon({
        html: '<div style="background-color: #28a745; border: 3px solid #155724; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);">‚ôªÔ∏è</div>',
        className: 'custom-recycle-icon',
        iconSize: [30, 30],
        iconAnchor: [15, 15],
        popupAnchor: [0, -15]
    });

    // Add recycling bins from the model with custom icons
    var binMarkers = [];
    @if (Model != null && Model.Any())
    {
        foreach (var bin in Model)
        {
            <text>
            var marker = L.marker([@bin.Latitude, @bin.Longitude], { icon: recycleIcon })
                .addTo(map)
                .bindPopup(`
                    <div class="p-2">
                        <div class="fw-bold text-success mb-2">
                            <span class="me-2">‚ôªÔ∏è</span>@Html.Raw(bin.Name)
                        </div>
                        <div class="mb-2">
                            <small class="text-muted">
                                <i class="fas fa-map-marker-alt me-1"></i>@Html.Raw(bin.Address)
                            </small>
                        </div>
                        <div class="mb-2">
                            <small class="text-muted">
                                <i class="fas fa-crosshairs me-1"></i>@bin.Latitude, @bin.Longitude
                            </small>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-sm btn-success" onclick="navigateToBin(@bin.Latitude, @bin.Longitude)">
                                <i class="fas fa-directions me-1"></i>Get Directions
                            </button>
                        </div>
                    </div>
                `);
            binMarkers.push(marker);
            </text>
        }
    }

    // Function to navigate to a specific bin
    function navigateToBin(lat, lng) {
        // Center the map on the selected bin
        map.setView([lat, lng], 18);
        
        // Open the popup for that bin
        map.eachLayer(function(layer) {
            if (layer instanceof L.Marker) {
                if (layer.getLatLng().lat === lat && layer.getLatLng().lng === lng) {
                    layer.openPopup();
                }
            }
        });
    }

    // Function to highlight and center on the most recent bin
    function highlightNewestBin() {
        if (binMarkers.length > 0) {
            // Get the last added marker (most recent)
            var newestMarker = binMarkers[binMarkers.length - 1];
            var latLng = newestMarker.getLatLng();
            
            // Center map on the newest bin
            map.setView([latLng.lat, latLng.lng], 18);
            
            // Open popup for the newest bin
            newestMarker.openPopup();
            
            // Add a pulsing animation to highlight the newest bin
            newestMarker.setIcon(L.divIcon({
                html: '<div style="background-color: #28a745; border: 3px solid #155724; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-size: 16px; color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.3); animation: pulse 2s infinite;">‚ôªÔ∏è</div>',
                className: 'custom-recycle-icon',
                iconSize: [30, 30],
                iconAnchor: [15, 15],
                popupAnchor: [0, -15]
            }));
            
            // Reset to normal icon after 3 seconds
            setTimeout(function() {
                newestMarker.setIcon(recycleIcon);
            }, 3000);
        }
    }

    // Check if we just added a new bin (success message present)
    @if (TempData["Success"] != null)
    {
        <text>
        // Auto-highlight the newest bin when coming from admin
        setTimeout(function() {
            highlightNewestBin();
        }, 1000);
        </text>
    }

    // Add click event to show bin details in a more prominent way
    map.on('click', function(e) {
        // You can add custom click behavior here if needed
    });

    // Add a legend for the map
    const legend = L.control({position: 'bottomright'});
    legend.onAdd = function (map) {
        const div = L.DomUtil.create('div', 'info legend');
        div.innerHTML = `
            <div style="background: white; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.2);">
                <h6 class="mb-2"><strong>Map Legend</strong></h6>
                <div class="mb-1">
                    <span style="display: inline-block; width: 20px; height: 20px; background-color: #28a745; border: 2px solid #155724; border-radius: 50%; margin-right: 8px; text-align: center; line-height: 16px; font-size: 12px; color: white;">‚ôªÔ∏è</span>
                    <small>Recycling Bins</small>
                </div>
                <div class="mb-1">
                    <span style="display: inline-block; width: 12px; height: 12px; background-color: #28a745; border-radius: 50%; margin-right: 5px;"></span>
                    <small>Campus Landmarks</small>
                </div>
            </div>
        `;
        return div;
    };
    legend.addTo(map);
    </script>
}
